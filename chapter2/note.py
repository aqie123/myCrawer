#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
深度优先和广度优先

1.网站的树结构
2.深度优先算法和实现(递归)
    ABDEICFGH
    容易堆栈溢出
3.广度优先算法和实现(队列实现)
    ABCAEFGHI
4.爬虫去重策略
    1.访问过url保存到数据库
    2.访问过url保存到set(内存),只需o(1)代价可查询url
      100000000*2byte*50个字符/1024/1024/1024 = 9G (内存占用大)
    3.url经过md5等方法哈希后保存到set中
    4.bitmap方法将访问过url通过hash函数映射到某一位  (缺点冲突高)
    5.bloomfilter 方法对bitmap改进,多重hash函数降低冲突
5.字符串编码
    1.ASCII A 十进制65   二进制 0100 0001
    2.中    编码20013  二进制 01001110 00101101
    3.A  unicode 编码  二进制 00000000 0100 0001
    4.unicode 传输英文占据空间大
    5.可变长编码 utf-8,英文变长一个字节,汉字三个字节。
        (文件保存,网络传输用utf8)
        (内存计算转换为unicode)
"""


